#!/usr/bin/env python

import argparse
import os

from igclib.model.race import Race


def argument_parser():
    parser = argparse.ArgumentParser(description='igclib - race exporter')
    parser.add_argument('--task', required=True, type=str, help='Path to the task file')    
    parser.add_argument('--flights', required=True, type=str, help='Path to the IGC tracks directory')
    parser.add_argument('--export', required=True, type=str, help='Path to which you want to save the race')
    parser.add_argument('--n_jobs', type=int, default=-1, help='Number of CPU cores used for task validation (-1 to use all cores)')

    return parser

if __name__ == '__main__':

    # parse arguments
    parser = argument_parser()
    args = parser.parse_args()

    TASK_FILE = args.task
    FLIGHTS_DIR = args.flights
    N_JOBS = args.n_jobs
    RACE_PATH = args.export_path

    # checking arguments
    if not os.path.isfile(TASK_FILE):
        raise ValueError('Task path is not valid')
    if not os.path.isdir(FLIGHTS_DIR):
        raise ValueError('Flights path is not a directory')
    if len(os.listdir(FLIGHTS_DIR)) == 0:
        raise ValueError('Flights directory is empty')

    os.makedirs(os.path.basename(RACE_PATH), exist_ok=True)
    
    r =  Race(FLIGHTS_DIR, TASK_FILE, N_JOBS)
    r.save(RACE_PATH)
